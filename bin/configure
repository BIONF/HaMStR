#!/bin/bash
error=0;
####### FUNCTIONS #########
function usage
{
    echo "usage: configure [[[-p ] [-n]] | [-h]]"
    echo "choose flag -p or --protein_only if you want to run hamstr only on protein sequence data"
    echo "choose flag -n or --noublast if you want to run hamstr without the -ublast option"
}


## parsing command line option
while [ "$1" != "" ]; do
    case $1 in
        -p | --protein_only )   protonly=1
				;;
	-n | --noublast )	noublast=1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done
################# USER SETTINGS ###############
sedprog='sed';
grepprog='grep';
###############################################
#### testing the user settings ################
sedpath=`which $sedprog 2>&1 |grep -v '\bno\b'`
greppath=`which $grepprog 2>&1 |grep -v '\bno\b'`
if [ ! $sedpath ]
then
	echo "$sedprog could not be found. Please update the configure script";
	exit;
fi
if [ ! $greppath ]
then
	echo "$grepprog could not be found. Please update the configure script";
	exit;
fi
##############################################
########### update the sed and grep commands in the perl scripts
$sedprog -i -e "s/\(my \$sedprog = '\).*/\1$sedprog';/" hamstr.pl;
$sedprog -i -e "s/\(my \$grepprog = '\).*/\1$grepprog';/" hamstr.pl;
$sedprog -i -e "s/\(my \$sedprog = '\).*/\1$sedprog';/" oneSeq.pl;
$sedprog -i -e "s/\(my \$grepprog = '\).*/\1$grepprog';/" oneSeq.pl;
############################################# 
## localize the perl installation
echo "Updating paths"
path2perl=`which perl`
echo "	updating path to perl: $path2perl"
$sedprog -i -e "s|\#\!.*|\#\!$path2perl|g" hamstr.pl;
$sedprog -i -e "s|\#\!.*|\#\!$path2perl|g" nentferner.pl;
$sedprog -i -e "s|\#\!.*|\#\!$path2perl|g" translate.pl;
$sedprog -i -e "s|\#\!.*|\#\!$path2perl|g" oneSeq.pl;
$sedprog -i -e "s|\#\!.*|\#\!$path2perl|g" multifasta2oneSeq.pl;

## get the path to the perl modules
path2dir=`pwd |$sedprog -e 's/\(.*\)\/.*/\1/'`;

echo "	updating path to lib: $path2dir"
$sedprog -i -e "s|use lib.*lib\(.*\)|use lib '$path2dir/lib\1|" hamstr.pl
$sedprog -i -e "s|use lib.*|use lib '$path2dir/lib';|" nentferner.pl
$sedprog -i -e "s|use lib.*|use lib '$path2dir/lib';|g" translate.pl
$sedprog -i -e "s|use lib.*|use lib '$path2dir/lib';|g" oneSeq.pl

## update the default paths to core_ortholog and blast_dir
echo "	updating default path to blast_dir and core_orthologs: $path2bin"
$sedprog -i -e "s|\(my \$path = \).*|\1 '$path2dir';|g" hamstr.pl


## checking dependencies
echo "Checking dependencies"
blastallpath=`which blastall 2>&1 |grep -v '\bno\b'`
echo "	checking blastall"
if [ $blastallpath ]
	then
	echo "		succeeded" #do nothing as this is default for hamstr
else
	echo "	blastall is not installed or not in the default path."
	echo "	checking for blastp"
	blastpluspath=`which blastp 2>&1 |grep -v '\bno\b'`
	if [ $blastpluspath ]
		then
		echo "		succeeded"
		$sedprog -i -e 's/^\(my $blast_prog .*blastall\)/\#\1/' hamstr.pl;
		$sedprog -i -e 's/^\(my $blast_prog .*blastall\)/\#\1/' oneSeq.pl;

		$sedprog -i -e 's/\#\(my $blast_prog .*blastp\)/\1/' hamstr.pl;
		$sedprog -i -e 's/\#\(my $blast_prog .*blastp\)/\1/' oneSeq.pl;
	else "	FATAL: No blast program was found. Please install!"
	error=1;
	fi
fi
## Check for ublast
if [ $noublast ]
	then
	echo "  omitting check for usearch. Option --noublast has been chosen";
	echo "  updating hamstr.pl script"
	$sedprog -i -e 's/my $runublast = [0,1];/my $runublast = 0;/' hamstr.pl;
else
	echo "	checking ublast"
	usearchpath=`which usearch 2>&1 |grep -v '\bno\b'`
	if [ $usearchpath ]
        	then
        	echo "          succeeded" #do nothing as this is default for hamstr
		$sedprog -i -e 's/my $runublast = [0,1];/my $runublast = 1;/' hamstr.pl;
	else
	echo "	FATAL: usearch was not found and configure was run without the --noublast option"
	error=1;
	fi
fi
## Check for genewise
if [ $protonly ]
        then
        echo "  ommitting check for genewise. Option --protein_only has been chosen";
        echo "  updating hamstr.pl script"
        $sedprog -i -e 's/$check_genewise = [0,1];/$check_genewise = 0;/' hamstr.pl;
        
else
echo "  checking genewise"
	$sedprog -i -e 's/$check_genewise = [0,1];/$check_genewise = 1;/' hamstr.pl;
genewisepath=`which genewise 2>&1 |$grepprog -v '\bno\b'`
if [ $genewisepath ]
        then
        echo "          succeeded"
        echo "          checking environmental variable WISECONFIGDIR"
        wisecfg=`echo $WISECONFIGDIR |$grepprog '/'`
        if [ $wisecfg ]
                then
                echo "          succeeded: $wisecfg"
        else
                echo "  FATAL: Please set the environmental variable WISECONFIGDIR according to the installation instructions of genewise. If you want to run HaMStR on protein data only, run configure --protein_only";
                error=1;
        fi
        
else
        echo "  FATAL: genewise has not been installed properly. If you want to run HaMStR on protein data only, run configure --protein_only";
        error=1;
fi
fi
## Checking for environmental variable ONESEQDIR
echo "Checking environmental variable ONESEQDIR"
oneseqcfg=`echo $ONESEQDIR`
if [ $oneseqcfg ]
	then
	echo "	succeeded: $oneseqcfg"
else
	echo "FATAL: Please set the environmental variable ONSEQDIR to point at the directory containing the oneseq files and directory"
	error=1;
fi
## Checking for hmmsearch
echo "	checking for hmmsearch"
hmmsearchpath=`which hmmsearch 2>&1 |grep -v '\bno\b'`
if [ $hmmsearchpath ]
	then
	echo "		succeeded: $hmmsearchpath"
else
	echo "	FATAL: Please install the hmmer3 package"
	error=1;
fi
## Checking for clustalw2
echo "	checking for clustalw2";
clustalpath=`which clustalw2 2>&1 |grep -v '\bno\b'`
if [ $clustalpath ]
        then
        echo "		succeeded: $clustalpath"
else
	echo "	checking for clustalw"
	clustalpath=`which clustalw 2>&1 |grep -v '\bno\b'`
	if [ $clustalpath ]
        then
		echo "		succeeded: $clustalpath";
		echo "		updating hamstrscript";
		$sedprog -i -e 's/clustalw2/clustalw/g' hamstr.pl; 
	else
        	echo "  FATAL: Please install clustalw2"
        error=1;
	fi
fi
## Checking for Mafft
echo "  checking for mafft-linsi";
mafftpath=`which mafft-linsi 2>&1 |grep -v '\bno\b'`
if [ $mafftpath ] 
        then
        echo "          succeeded: $mafftpath"
else
        echo "  FATAL: Please install mafft"
        error=1;
fi
### wrap up
if [ $error == 1 ]
then
	echo "Configuration of HaMStR failed. Please see the error messages above."
else
        echo "Generating symbolic link hamstr -> hamstr.pl"
        ln -s -f ./hamstr.pl ./hamstr       
        echo "All tests succeeded, HaMStR should be ready to run";
        $sedprog -i -e 's/my $configure = .*/my $configure = 1;/' hamstr.pl;
        $sedprog -i -e 's/my $configure = .*/my $configure = 1;/' oneSeq.pl;
        $sedprog -i -e 's/my $configure = .*/my $configure = 1;/' multifasta2oneSeq.pl;
fi;
